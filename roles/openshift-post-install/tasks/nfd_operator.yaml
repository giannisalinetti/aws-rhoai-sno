---
- name: Create Node Feature Discovery namespace
  kubernetes.core.k8s:
    kubeconfig: "{{ install_dir }}/auth/kubeconfig"
    host: "https://api.{{ cluster_name }}.{{ sanitized_base_domain }}:6443"
    state: present
    definition: "{{ lookup('template', 'nfd_operator_namespace.yaml.j2') | from_yaml }}"
    wait_sleep: 10
    wait_timeout: 360

- name: Create Node Feature Discovery OperatorGroup
  kubernetes.core.k8s:
    kubeconfig: "{{ install_dir }}/auth/kubeconfig"
    host: "https://api.{{ cluster_name }}.{{ sanitized_base_domain }}:6443"
    state: present
    definition: "{{ lookup('template', 'nfd_operator_operatorgroup.yaml.j2') | from_yaml }}"
    wait_sleep: 10
    wait_timeout: 360

- name: Create Node Feature Discovery Operator Subscription
  kubernetes.core.k8s:
    kubeconfig: "{{ install_dir }}/auth/kubeconfig"
    host: "https://api.{{ cluster_name }}.{{ sanitized_base_domain }}:6443"
    state: present
    definition: "{{ lookup('template', 'nfd_operator_subscription.yaml.j2') | from_yaml }}"
    wait_sleep: 10
    wait_timeout: 360

- name: Wait for NFS Instance CRD
  kubernetes.core.k8s_info:
    kubeconfig: "{{ install_dir }}/auth/kubeconfig"
    host: "https://api.{{ cluster_name }}.{{ sanitized_base_domain }}:6443"
    kind: CustomResourceDefinition
    api_version: apiextensions.k8s.io/v1
    name: nodefeaturediscoveries.nfd.openshift.io
  register: nfd_crd
  until: 
    - nfd_crd.resources | length > 0
  retries: 60
  delay: 10

- name: Create Node Feature Discovery Instance
  kubernetes.core.k8s:
    kubeconfig: "{{ install_dir }}/auth/kubeconfig"
    host: "https://api.{{ cluster_name }}.{{ sanitized_base_domain }}:6443"
    state: present
    definition: "{{ lookup('template', 'nfd_instance.yaml.j2') | from_yaml }}"
    wait_sleep: 10
    wait_timeout: 360

- name: "Wait for NFD Instance Readiness"
  kubernetes.core.k8s_info:
    kubeconfig: "{{ install_dir }}/auth/kubeconfig"
    host: "https://api.{{ cluster_name }}.{{ sanitized_base_domain }}:6443"
    kind: NodeFeatureDiscovery
    api_version: nfd.openshift.io/v1
    name: "nfd-instance"
    namespace: openshift-nfd
  register: nfd_instance_status
  until: nfd_instance_status.resources | json_query('[*].status.conditions[?type==`Available`].status') | flatten | first | bool
  retries: 60
  delay: 10

